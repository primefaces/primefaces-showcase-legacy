<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/template.xhtml">

    <ui:define name="head">
		<style type="text/css">
			.ui-datalist {
				width:300px;
                margin-bottom: 20px;
			}
		
			.ui-datalist-item {
				padding:3px;
			}
            
            .paginated .ui-datalist-data {
                padding-left: 20px;
            }
		</style>
	</ui:define>
    
    <ui:define name="title">
        DataList
    </ui:define>

    <ui:define name="description">
        DataList displays data in a list layout.
    </ui:define>

    <ui:define name="implementation">
        
        <h:form id="form">
            <p:dataList value="#{dataListView.cars1}" var="car" type="ordered">
                <f:facet name="header">
                    Basic
                </f:facet>
                #{car.brand}, #{car.year}
            </p:dataList>

            <p:dataList value="#{dataListView.cars2}" var="car" type="definition">
                <f:facet name="header">
                    Definition
                </f:facet>
                Brand: #{car.brand}, Year: #{car.year}
                <f:facet name="description">
                    <p:graphicImage name="demo/images/car/#{car.brand}.gif"/> 
                </f:facet>
            </p:dataList>

            <p:dataList value="#{dataListView.cars3}" var="car" type="unordered" itemType="none" paginator="true" rows="10" styleClass="paginated">
                <f:facet name="header">
                    Paginator
                </f:facet>
                <p:commandLink update=":form:carDetail" oncomplete="PF('carDialog').show()" title="View Detail" styleClass="ui-icon ui-icon-search" style="float:left;margin-right:10px">
                    <f:setPropertyActionListener value="#{car}" target="#{dataListView.selectedCar}" />
                    <h:outputText value="#{car.brand}, #{car.year}" />
                </p:commandLink>
                <h:outputText value="#{car.brand}, #{car.year}" style="display:inline-block"/>
            </p:dataList>
            
            <p:dialog header="Car Info" widgetVar="carDialog" modal="true" showEffect="blind" hideEffect="explode" resizable="false">
                <p:outputPanel id="carDetail" style="text-align:center;">
                    <p:panelGrid  columns="2" rendered="#{not empty dataListView.selectedCar}" columnClasses="label,value">
                        <f:facet name="header">
                            <p:graphicImage name="demo/images/car/#{dataListView.selectedCar.brand}-big.gif"/> 
                        </f:facet>
                        
                        <h:outputText value="Id:" />
                        <h:outputText value="#{dataListView.selectedCar.id}" />

                        <h:outputText value="Year" />
                        <h:outputText value="#{dataListView.selectedCar.year}" />

                        <h:outputText value="Color:" />
                        <h:outputText value="#{dataListView.selectedCar.color}" style="color:#{dataListView.selectedCar.color}"/>
                    
                        <h:outputText value="Price" />
                        <h:outputText value="\$#{dataListView.selectedCar.price}" />
                    </p:panelGrid>
                </p:outputPanel>
            </p:dialog>
        </h:form>
        
    </ui:define>

    <ui:define name="source">
        <p:tabView>
            <p:tab title="dataList.xhtml">
                <pre name="code" class="brush:xml">
&lt;h:form id="form"&gt;
    &lt;p:dataList value="\#{dataListView.cars1}" var="car" type="ordered"&gt;
        &lt;f:facet name="header"&gt;
            Basic
        &lt;/f:facet&gt;
        \#{car.brand}, \#{car.year}
    &lt;/p:dataList&gt;

    &lt;p:dataList value="\#{dataListView.cars2}" var="car" type="definition"&gt;
        &lt;f:facet name="header"&gt;
            Definition
        &lt;/f:facet&gt;
        Brand: \#{car.brand}, Year: \#{car.year}
        &lt;f:facet name="description"&gt;
            &lt;p:graphicImage name="demo/images/car/\#{car.brand}.gif"/&gt; 
        &lt;/f:facet&gt;
    &lt;/p:dataList&gt;

    &lt;p:dataList value="\#{dataListView.cars3}" var="car" type="unordered" itemType="none" paginator="true" rows="10" styleClass="paginated"&gt;
        &lt;f:facet name="header"&gt;
            Paginator
        &lt;/f:facet&gt;
        &lt;p:commandLink update=":form:carDetail" oncomplete="PF('carDialog').show()" title="View Detail" styleClass="ui-icon ui-icon-search" style="float:left;margin-right:10px"&gt;
            &lt;f:setPropertyActionListener value="\#{car}" target="\#{dataListView.selectedCar}" /&gt;
            &lt;h:outputText value="\#{car.brand}, \#{car.year}" /&gt;
        &lt;/p:commandLink&gt;
        &lt;h:outputText value="\#{car.brand}, \#{car.year}" style="display:inline-block"/&gt;
    &lt;/p:dataList&gt;

    &lt;p:dialog header="Car Info" widgetVar="carDialog" modal="true" showEffect="blind" hideEffect="explode" resizable="false"&gt;
        &lt;p:outputPanel id="carDetail" style="text-align:center;"&gt;
            &lt;p:panelGrid  columns="2" rendered="\#{not empty dataListView.selectedCar}" columnClasses="label,value"&gt;
                &lt;f:facet name="header"&gt;
                    &lt;p:graphicImage name="demo/images/car/\#{dataListView.selectedCar.brand}-big.gif"/&gt; 
                &lt;/f:facet&gt;

                &lt;h:outputText value="Id:" /&gt;
                &lt;h:outputText value="\#{dataListView.selectedCar.id}" /&gt;

                &lt;h:outputText value="Year" /&gt;
                &lt;h:outputText value="\#{dataListView.selectedCar.year}" /&gt;

                &lt;h:outputText value="Color:" /&gt;
                &lt;h:outputText value="\#{dataListView.selectedCar.color}" style="color:\#{dataListView.selectedCar.color}"/&gt;

                &lt;h:outputText value="Price" /&gt;
                &lt;h:outputText value="\$\#{dataListView.selectedCar.price}" /&gt;
            &lt;/p:panelGrid&gt;
        &lt;/p:outputPanel&gt;
    &lt;/p:dialog&gt;
&lt;/h:form&gt;
                </pre>
            </p:tab>

            <p:tab title="DataListView.java">
                <pre name="code" class="brush:java">
package org.primefaces.showcase.view.data;

import java.io.Serializable;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.ViewScoped;
import org.primefaces.showcase.domain.Car;
import org.primefaces.showcase.service.CarService;

@ManagedBean
@ViewScoped
public class DataListView implements Serializable {
    
    private List&lt;Car&gt; cars1;
    
    private List&lt;Car&gt; cars2;
    
    private List&lt;Car&gt; cars3;
    
    private Car selectedCar;
    
    @ManagedProperty("#{carService}")
    private CarService service;
    
    @PostConstruct
    public void init() {
        cars1 = service.createCars(10);
        cars2 = service.createCars(5);
        cars3 = service.createCars(50);
    }

    public List&lt;Car&gt; getCars1() {
        return cars1;
    }

    public List&lt;Car&gt; getCars2() {
        return cars2;
    }

    public List&lt;Car&gt; getCars3() {
        return cars3;
    }    

    public void setService(CarService service) {
        this.service = service;
    }

    public Car getSelectedCar() {
        return selectedCar;
    }

    public void setSelectedCar(Car selectedCar) {
        this.selectedCar = selectedCar;
    }
}
                </pre>
            </p:tab>
            
            <p:tab title="CarService.java">
                <pre name="code" class="brush:java">
package org.primefaces.showcase.service;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import javax.faces.bean.ApplicationScoped;
import javax.faces.bean.ManagedBean;
import org.primefaces.showcase.domain.Car;

@ManagedBean(name = "carService")
@ApplicationScoped
public class CarService {
    
    private final static String[] colors;
	
	private final static String[] brands;
    
    static {
		colors = new String[10];
		colors[0] = "Black";
		colors[1] = "White";
		colors[2] = "Green";
		colors[3] = "Red";
		colors[4] = "Blue";
		colors[5] = "Orange";
		colors[6] = "Silver";
		colors[7] = "Yellow";
		colors[8] = "Brown";
		colors[9] = "Maroon";
		
		brands = new String[10];
		brands[0] = "BMW";
		brands[1] = "Mercedes";
		brands[2] = "Volvo";
		brands[3] = "Audi";
		brands[4] = "Renault";
		brands[5] = "Fiat";
		brands[6] = "Volkswagen";
		brands[7] = "Honda";
		brands[8] = "Jaguar";
		brands[9] = "Ford";
	}
    
    public List&lt;Car&gt; createCars(int size) {
        List&lt;Car&gt; list = new ArrayList&lt;Car&gt;();
		for(int i = 0 ; i &lt; size ; i++) {
			list.add(new Car(getRandomId(), getRandomBrand(), getRandomYear(), getRandomColor(), getRandomPrice(), getRandomSoldState()));
        }
        
        return list;
    }
    
    private String getRandomId() {
		return UUID.randomUUID().toString().substring(0, 8);
	}
    
    private int getRandomYear() {
		return (int) (Math.random() * 50 + 1960);
	}
	
	private String getRandomColor() {
		return colors[(int) (Math.random() * 10)];
	}
	
	private String getRandomBrand() {
		return brands[(int) (Math.random() * 10)];
	}
    
    public int getRandomPrice() {
		return (int) (Math.random() * 100000);
	}
    
    public boolean getRandomSoldState() {
		return (Math.random() &gt; 0.5) ? true: false;
	}

    public List&lt;String&gt; getColors() {
        return Arrays.asList(colors);
    }
    
    public List&lt;String&gt; getBrands() {
        return Arrays.asList(brands);
    }
}
                </pre>
            </p:tab>
            
            <p:tab title="Documentation" titleStyleClass="tab-doc docslide-137" />
        </p:tabView>

    </ui:define>

</ui:composition>