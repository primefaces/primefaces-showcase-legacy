<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/template.xhtml">

    <ui:define name="head">
        <style type="text/css">
            .image-ring .ui-ring-item {
                border:0 none;
            }

            .image-ring .ui-ring-item img {
				width: 100%;
			}
            
            .ui-ring button {
                font-size: 1em !important;
            }
            
            .value {
                font-weight: bold;
            }
        </style>
    </ui:define>
    
    <ui:define name="title">
        Ring
    </ui:define>

    <ui:define name="description">
        Ring is a data display component with a circular animation.
    </ui:define>

    <ui:define name="implementation">

        <h:form id="form">
            <h3 style="margin-top: 0">Basic Ring</h3>
            <p:ring id="basic" value="#{ringView.cars}" var="car">
                <p:outputPanel style="text-align: center;" layout="block">
                    #{car.brand}
                    <br />
                    <p:commandButton update=":form:carDetail" icon="ui-icon-search" title="View" oncomplete="PF('carDialog').show();">
                        <f:setPropertyActionListener value="#{car}" target="#{ringView.selectedCar}" />
                    </p:commandButton>
                </p:outputPanel>
            </p:ring>

            <h3>Images with Custom Easing</h3>
            <p:ring id="custom" value="#{ringView.cars}" var="car" styleClass="image-ring" easing="easeInOutBack">
                <p:graphicImage id="img" name="/demo/images/car/#{car.brand}-big.gif" />
            </p:ring>

            <p:dialog header="Car Info" widgetVar="carDialog" modal="true" showEffect="fade" hideEffect="fade" resizable="false" width="170">
                <p:outputPanel id="carDetail" style="text-align:center;" layout="block">
                    <p:panelGrid  columns="2" rendered="#{not empty ringView.selectedCar}" columnClasses="value">
                        <f:facet name="header">
                            <p:graphicImage name="demo/images/car/#{ringView.selectedCar.brand}-big.gif" /> 
                        </f:facet>
                        
                        <h:outputText value="Id:" />
                        <h:outputText value="#{ringView.selectedCar.id}" />

                        <h:outputText value="Year" />
                        <h:outputText value="#{ringView.selectedCar.year}" />
                        
                        <h:outputText value="Brand: " />
                        <h:outputText value="#{ringView.selectedCar.brand}" />

                        <h:outputText value="Color:" />
                        <h:outputText value="#{ringView.selectedCar.color}" style="color:#{ringView.selectedCar.color}" />
                    </p:panelGrid>
                </p:outputPanel>
            </p:dialog>
        </h:form>
        
    </ui:define>

    <ui:define name="source">
        <p:tabView>
            <p:tab title="ring.xhtml">
                <pre name="code" class="brush:xml">
&lt;h:form id="form"&gt;
    &lt;h3 style="margin-top: 0"&gt;Basic Ring&lt;/h3&gt;
    &lt;p:ring id="basic" value="\#{ringView.cars}" var="car"&gt;
        &lt;p:outputPanel style="text-align: center;" layout="block"&gt;
            \#{car.brand}
            &lt;br /&gt;
            &lt;p:commandButton update=":form:carDetail" icon="ui-icon-search" title="View" oncomplete="PF('carDialog').show();"&gt;
                &lt;f:setPropertyActionListener value="\#{car}" target="\#{ringView.selectedCar}" /&gt;
            &lt;/p:commandButton&gt;
        &lt;/p:outputPanel&gt;
    &lt;/p:ring&gt;

    &lt;h3&gt;Images with Custom Easing&lt;/h3&gt;
    &lt;p:ring id="custom" value="\#{ringView.cars}" var="car" styleClass="image-ring" easing="easeInOutBack"&gt;
        &lt;p:graphicImage id="img" name="/demo/images/car/\#{car.brand}-big.gif" /&gt;
    &lt;/p:ring&gt;

    &lt;p:dialog header="Car Info" widgetVar="carDialog" modal="true" showEffect="fade" hideEffect="fade" resizable="false" width="170"&gt;
        &lt;p:outputPanel id="carDetail" style="text-align:center;" layout="block"&gt;
            &lt;p:panelGrid  columns="2" rendered="\#{not empty ringView.selectedCar}" columnClasses="value"&gt;
                &lt;f:facet name="header"&gt;
                    &lt;p:graphicImage name="demo/images/car/\#{ringView.selectedCar.brand}-big.gif" /&gt; 
                &lt;/f:facet&gt;

                &lt;h:outputText value="Id:" /&gt;
                &lt;h:outputText value="\#{ringView.selectedCar.id}" /&gt;

                &lt;h:outputText value="Year" /&gt;
                &lt;h:outputText value="\#{ringView.selectedCar.year}" /&gt;

                &lt;h:outputText value="Brand: " /&gt;
                &lt;h:outputText value="\#{ringView.selectedCar.brand}" /&gt;

                &lt;h:outputText value="Color:" /&gt;
                &lt;h:outputText value="\#{ringView.selectedCar.color}" style="color:\#{ringView.selectedCar.color}" /&gt;
            &lt;/p:panelGrid&gt;
        &lt;/p:outputPanel&gt;
    &lt;/p:dialog&gt;
&lt;/h:form&gt;
                </pre>
            </p:tab>

            <p:tab title="RingView.java">
                <pre name="code" class="brush:java">
package org.primefaces.showcase.view.data;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;

import org.primefaces.showcase.domain.Car;

@ManagedBean
public class RingView implements Serializable {
    
    private List&lt;Car&gt; cars;
    private Car selectedCar;
    
    @PostConstruct
    public void init() {
        cars = new ArrayList&lt;Car&gt;();
        
        cars.add(new Car("1", "Ford", 2000, "Black"));
        cars.add(new Car("2", "Audi", 2003, "Orange"));
        cars.add(new Car("4", "BMW", 2012, "Red"));
        cars.add(new Car("5", "Fiat", 2001, "Yellow"));
        cars.add(new Car("6", "Mercedes", 2014, "Blue"));
    }

    public List&lt;Car&gt; getCars() {
        return cars;
    }

    public void setCars(List&lt;Car&gt; cars) {
        this.cars = cars;
    }

    public Car getSelectedCar() {
        return selectedCar;
    }

    public void setSelectedCar(Car selectedCar) {
        this.selectedCar = selectedCar;
    }
}
                </pre>
            </p:tab>
            
            <p:tab title="Documentation" titleStyleClass="tab-doc docslide-383" />
        </p:tabView>

    </ui:define>

</ui:composition>
