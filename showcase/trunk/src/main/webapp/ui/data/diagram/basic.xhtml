<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="./template.xhtml">

    <ui:define name="head">
        <style type="text/css">
            .ui-diagram-element {
                border:0.1em dotted #d4e06b; 	
                width:14em; 
                height:4em; 	
                line-height:4em;
                text-align: center;
            }
        </style>
	</ui:define>
    
    <ui:define name="title">
        Diagram - <span class="subitem">Basic - Since 5.1.8</span>
    </ui:define>

    <ui:define name="description">
        Diagram is generic component to create visual elements and connect them on a web page. SVG is used on modern browsers and VML on IE 8 and below. Component
        is highly flexible in terms of api, events and theming.
    </ui:define>

    <ui:define name="implementation">

        <p:diagram value="#{diagramBasicView.model}" style="height:400px" styleClass="ui-widget-content" />
        
    </ui:define>

    <ui:define name="source">
        <p:tabView>
            <p:tab title="basic.xhtml">
                <pre name="code" class="brush:xml">
&lt;p:diagram value="\#{diagramBasicView.model}" style="height:400px" styleClass="ui-widget-content" /&gt;
                </pre>
            </p:tab>
            
            <p:tab title="BasicView.java">
                <pre name="code" class="brush:java">
package org.primefaces.showcase.view.data.diagram;

import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.RequestScoped;
import org.primefaces.model.diagram.DefaultDiagramModel;
import org.primefaces.model.diagram.DiagramModel;
import org.primefaces.model.diagram.Element;
import org.primefaces.model.diagram.Connection;
import org.primefaces.model.diagram.endpoint.DotEndPoint;
import org.primefaces.model.diagram.endpoint.EndPointAnchor;

@ManagedBean(name = "diagramBasicView")
@RequestScoped
public class BasicView {
    
    private DefaultDiagramModel model;

    @PostConstruct
    public void init() {
        model = new DefaultDiagramModel();
        model.setMaxConnections(-1);
        
        Element elementA = new Element("A", "20em", "6em");
        elementA.addEndPoint(new DotEndPoint(EndPointAnchor.BOTTOM));
        
        Element elementB = new Element("B", "10em", "18em");
        elementB.addEndPoint(new DotEndPoint(EndPointAnchor.TOP));
        
        Element elementC = new Element("C", "40em", "18em");
        elementC.addEndPoint(new DotEndPoint(EndPointAnchor.TOP));
                        
        model.addElement(elementA);
        model.addElement(elementB);
        model.addElement(elementC);
        
        model.connect(new Connection(elementA.getEndPoints().get(0), elementB.getEndPoints().get(0)));        
        model.connect(new Connection(elementA.getEndPoints().get(0), elementC.getEndPoints().get(0)));
    }
    
    public DiagramModel getModel() {
        return model;
    }
}

                </pre>
            </p:tab>
        </p:tabView>

    </ui:define>

</ui:composition>
