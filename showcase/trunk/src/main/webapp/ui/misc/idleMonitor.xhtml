<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/template.xhtml">

    <ui:define name="title">
        IdleMonitor
    </ui:define>

    <ui:define name="description">
        IdleMonitor tracks user actions and invokes corresponding events when user goes idle after a specified time and becomes active again. 
        
    </ui:define>

    <ui:define name="implementation">
        
        <h:form>
            Stay idle on this page for 5 seconds to view the demo.
            
            <p:growl id="messages" showDetail="true" sticky="true" />

            <p:idleMonitor timeout="5000">
                <p:ajax event="idle" listener="#{idleMonitorView.onIdle}" update="messages" />
                <p:ajax event="active" listener="#{idleMonitorView.onActive}" update="messages" />
            </p:idleMonitor>
        </h:form>
        
    </ui:define>

    <ui:define name="source">
        <p:tabView>
            <p:tab title="idleMonitor.xhtml">
                <pre name="code" class="brush:xml">
&lt;h:form&gt;
    &lt;p:growl id="messages" showDetail="true" sticky="true" /&gt;

    &lt;p:idleMonitor timeout="5000"&gt;
        &lt;p:ajax event="idle" listener="\#{idleMonitorView.onIdle}" update="messages" /&gt;
        &lt;p:ajax event="active" listener="\#{idleMonitorView.onActive}" update="messages" /&gt;
    &lt;/p:idleMonitor&gt;
&lt;/h:form&gt;
                </pre>
            </p:tab>

            <p:tab title="IdleMonitorView.java">
                <pre name="code" class="brush:java">
package org.primefaces.showcase.view.misc;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.context.FacesContext;

@ManagedBean
public class IdleMonitorView {
    
    public void onIdle() {
		FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_WARN, 
										"No activity.", "What are you doing over there?"));
	}

    public void onActive() {
		FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_WARN,
										"Welcome Back", "Well, that's a long coffee break!"));
	}
}
                </pre>
            </p:tab>
            
            <p:tab title="Documentation" titleStyleClass="tab-doc docslide-250" />
        </p:tabView>

    </ui:define>

</ui:composition>