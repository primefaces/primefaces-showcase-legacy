<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/template.xhtml">

    <ui:define name="title">
        Hotkey
    </ui:define>

    <ui:define name="description">
        Hotkey is used to bind a key or a key combination to an client side or server side event via ajax. In first example
        use "left" and "right" keys to switch images and in second example you can do an ajax request with the (ctrl+shift+s) combination.
    </ui:define>

    <ui:define name="implementation">
        
        <h3 style="margin-top:0">ImageSwitch Integration (Left-Right)</h3>
        <p:imageSwitch effect="fade" widgetVar="switcher" slideshowAuto="false">
            <p:graphicImage name="demo/images/nature/nature1.jpg" />
            <p:graphicImage name="demo/images/nature/nature2.jpg" />
            <p:graphicImage name="demo/images/nature/nature3.jpg" />
            <p:graphicImage name="demo/images/nature/nature4.jpg" />
        </p:imageSwitch>

        <p:hotkey bind="left" handler="PF('switcher').previous();" />
        <p:hotkey bind="right" handler="PF('switcher').next();" />

        <h3>Ajax Hotkey (ctrl + shift + s)</h3>
        <h:form>
            <p:growl id="msgs" showDetail="true" />
            
            <p:hotkey bind="ctrl+shift+s" update="msgs" actionListener="#{hotkeyView.save}"/>

            <h:panelGrid columns="2" cellpadding="5">
                <p:outputLabel for="text" value="Text" />
                <p:inputText id="text" value="#{hotkeyView.text}" />
            </h:panelGrid>
        </h:form>
        
    </ui:define>

    <ui:define name="source">
        <p:tabView>
            <p:tab title="hotkey.xhtml">
                <pre name="code" class="brush:xml">
&lt;h3 style="margin-top:0"&gt;ImageSwitch Integration (Left-Right)&lt;/h3&gt;
&lt;p:imageSwitch effect="fade" widgetVar="switcher" slideshowAuto="false"&gt;
    &lt;p:graphicImage name="demo/images/nature/nature1.jpg" /&gt;
    &lt;p:graphicImage name="demo/images/nature/nature2.jpg" /&gt;
    &lt;p:graphicImage name="demo/images/nature/nature3.jpg" /&gt;
    &lt;p:graphicImage name="demo/images/nature/nature4.jpg" /&gt;
&lt;/p:imageSwitch&gt;

&lt;p:hotkey bind="left" handler="PF('switcher').previous();" /&gt;
&lt;p:hotkey bind="right" handler="PF('switcher').next();" /&gt;

&lt;h3&gt;Ajax Hotkey (ctrl + shift + s)&lt;/h3&gt;
&lt;h:form&gt;
    &lt;p:growl id="msgs" showDetail="true" /&gt;

    &lt;p:hotkey bind="ctrl+shift+s" update="msgs" actionListener="\#{hotkeyView.save}"/&gt;

    &lt;h:panelGrid columns="2" cellpadding="5"&gt;
        &lt;p:outputLabel for="text" value="Text" /&gt;
        &lt;p:inputText id="text" value="\#{hotkeyView.text}" /&gt;
    &lt;/h:panelGrid&gt;
&lt;/h:form&gt;
                </pre>
            </p:tab>

            <p:tab title="HotkeyView.java">
                <pre name="code" class="brush:java">
package org.primefaces.showcase.view.misc;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.context.FacesContext;

@ManagedBean
public class HotkeyView {
    
    private String text;

    public String getText() {
        return text;
    }

    public void setText(String text) {
        this.text = text;
    }
    
    public void save() {
        FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Success", "Submitted with Hotkey"));
	}
}
                </pre>
            </p:tab>
            
            <p:tab title="Documentation" titleStyleClass="tab-doc docslide-241" />
        </p:tabView>

    </ui:define>

</ui:composition>