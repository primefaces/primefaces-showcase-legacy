<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/template.xhtml">
    
    <ui:define name="head">
        <style type="text/css">
            .left {
                text-align: left;
            }
            
            .right div {
                float: right;
            }
        </style>
	</ui:define>

    <ui:define name="title">
        Charts - <span class="subitem">Animate</span>
    </ui:define>

    <ui:define name="description">
        Charts can be animated on load.
    </ui:define>

    <ui:define name="implementation">
        <h:panelGrid columns="2" columnClasses="left,right" style="width:100%">
            <p:chart type="line" model="#{chartView.animatedModel1}" style="width:400px;" />
            <p:chart type="bar" model="#{chartView.animatedModel2}" style="width:400px;" />
        </h:panelGrid>
    </ui:define>

    <ui:define name="source">
        <p:tabView>
            <p:tab title="animate.xhtml">
                <pre name="code" class="brush:xml">
&lt;h:panelGrid columns="2" columnClasses="left,right" style="width:100%"&gt;
    &lt;p:chart type="line" model="\#{chartView.animatedModel1}" style="width:400px;" /&gt;
    &lt;p:chart type="bar" model="\#{chartView.animatedModel2}" style="width:400px;" /&gt;
&lt;/h:panelGrid&gt;
                </pre>
            </p:tab>

            <p:tab title="ChartView.java">
                <pre name="code" class="brush:java">
package org.primefaces.examples;

import javax.annotation.PostConstruct;
import java.io.Serializable;
import javax.faces.bean.ManagedBean;
import org.primefaces.model.chart.Axis;
import org.primefaces.model.chart.AxisType;
import org.primefaces.model.chart.BarChartModel;
import org.primefaces.model.chart.LineChartModel;
import org.primefaces.model.chart.ChartSeries;
import org.primefaces.model.chart.LineChartSeries;

@ManagedBean
public class ChartView implements Serializable {

    private LineChartModel animatedModel1;
    private BarChartModel animatedModel2;

    @PostConstruct
	public void init() {
        createAnimatedModels();
	}

    public LineChartModel getAnimatedModel1() {
        return animatedModel1;
    }

    public BarChartModel getAnimatedModel2() {
        return animatedModel2;
    }

    private void createAnimatedModels() {
        animatedModel1 = initLinearModel();
        animatedModel1.setTitle("Line Chart");
        animatedModel1.setAnimate(true);
        animatedModel1.setLegendPosition("se");
        Axis yAxis = animatedModel1.getAxis(AxisType.Y);
        yAxis.setMin(0);
        yAxis.setMax(10);
        
        animatedModel2 = initBarModel();
        animatedModel2.setTitle("Bar Charts");
        animatedModel2.setAnimate(true);
        animatedModel2.setLegendPosition("ne");
        yAxis = animatedModel2.getAxis(AxisType.Y);
        yAxis.setMin(0);
        yAxis.setMax(200);
    }
    
    private BarChartModel initBarModel() {
        BarChartModel model = new BarChartModel();

        ChartSeries boys = new ChartSeries();
        boys.setLabel("Boys");
        boys.set("2004", 120);
        boys.set("2005", 100);
        boys.set("2006", 44);
        boys.set("2007", 150);
        boys.set("2008", 25);

        ChartSeries girls = new ChartSeries();
        girls.setLabel("Girls");
        girls.set("2004", 52);
        girls.set("2005", 60);
        girls.set("2006", 110);
        girls.set("2007", 135);
        girls.set("2008", 120);

        model.addSeries(boys);
        model.addSeries(girls);
        
        return model;
    }
    
    private LineChartModel initLinearModel() {
        LineChartModel model = new LineChartModel();

        LineChartSeries series1 = new LineChartSeries();
        series1.setLabel("Series 1");

        series1.set(1, 2);
        series1.set(2, 1);
        series1.set(3, 3);
        series1.set(4, 6);
        series1.set(5, 8);

        LineChartSeries series2 = new LineChartSeries();
        series2.setLabel("Series 2");

        series2.set(1, 6);
        series2.set(2, 3);
        series2.set(3, 2);
        series2.set(4, 7);
        series2.set(5, 9);

        model.addSeries(series1);
        model.addSeries(series2);
        
        return model;
    }
   
}
                </pre>
            </p:tab>
            
            <p:tab title="Documentation" titleStyleClass="tab-doc docslide-68" />
        </p:tabView>

    </ui:define>

</ui:composition>