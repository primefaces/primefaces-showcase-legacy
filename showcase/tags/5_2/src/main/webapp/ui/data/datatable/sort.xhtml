<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="./template.xhtml">

    <ui:define name="title">
        DataTable - <span class="subitem">Sort</span>
    </ui:define>

    <ui:define name="description">
        Sorting is enabled with sortBy expressions. Both single and multiple column sorting are supported.
    </ui:define>

    <ui:define name="implementation">
        
        <h:form>
            <p:dataTable var="car" value="#{dtSortView.cars1}" style="margin-bottom:40px">
                <f:facet name="header">
                    Single Column Sort
                </f:facet>
                <p:column headerText="Id" sortBy="#{car.id}">
                    <h:outputText value="#{car.id}" />
                </p:column>

                <p:column headerText="Year" sortBy="#{car.year}">
                    <h:outputText value="#{car.year}" />
                </p:column>

                <p:column headerText="Brand" sortBy="#{car.brand}">
                    <h:outputText value="#{car.brand}" />
                </p:column>

                <p:column headerText="Color" sortBy="#{car.color}">
                    <h:outputText value="#{car.color}" />
                </p:column>
            </p:dataTable>
            
            <p:dataTable var="car" value="#{dtSortView.cars2}" sortMode="multiple">
                <f:facet name="header">
                    Multiple Column Sort with Metakey
                </f:facet>
                <p:column headerText="Id" sortBy="#{car.id}">
                    <h:outputText value="#{car.id}" />
                </p:column>

                <p:column headerText="Year" sortBy="#{car.year}">
                    <h:outputText value="#{car.year}" />
                </p:column>

                <p:column headerText="Brand" sortBy="#{car.brand}">
                    <h:outputText value="#{car.brand}" />
                </p:column>

                <p:column headerText="Color" sortBy="#{car.color}">
                    <h:outputText value="#{car.color}" />
                </p:column>
            </p:dataTable>
        </h:form>
        
    </ui:define>

    <ui:define name="source">
        <p:tabView>
            <p:tab title="sort.xhtml">
                <pre name="code" class="brush:xml">
&lt;h:form&gt;
    &lt;p:dataTable var="car" value="\#{dtSortView.cars1}" style="margin-bottom:40px"&gt;
        &lt;f:facet name="header"&gt;
            Single Column Sort
        &lt;/f:facet&gt;
        &lt;p:column headerText="Id" sortBy="\#{car.id}"&gt;
            &lt;h:outputText value="\#{car.id}" /&gt;
        &lt;/p:column&gt;

        &lt;p:column headerText="Year" sortBy="\#{car.year}"&gt;
            &lt;h:outputText value="\#{car.year}" /&gt;
        &lt;/p:column&gt;

        &lt;p:column headerText="Brand" sortBy="\#{car.brand}"&gt;
            &lt;h:outputText value="\#{car.brand}" /&gt;
        &lt;/p:column&gt;

        &lt;p:column headerText="Color" sortBy="\#{car.color}"&gt;
            &lt;h:outputText value="\#{car.color}" /&gt;
        &lt;/p:column&gt;
    &lt;/p:dataTable&gt;

    &lt;p:dataTable var="car" value="\#{dtSortView.cars2}" sortMode="multiple"&gt;
        &lt;f:facet name="header"&gt;
            Multiple Column Sort with Metakey
        &lt;/f:facet&gt;
        &lt;p:column headerText="Id" sortBy="\#{car.id}"&gt;
            &lt;h:outputText value="\#{car.id}" /&gt;
        &lt;/p:column&gt;

        &lt;p:column headerText="Year" sortBy="\#{car.year}"&gt;
            &lt;h:outputText value="\#{car.year}" /&gt;
        &lt;/p:column&gt;

        &lt;p:column headerText="Brand" sortBy="\#{car.brand}"&gt;
            &lt;h:outputText value="\#{car.brand}" /&gt;
        &lt;/p:column&gt;

        &lt;p:column headerText="Color" sortBy="\#{car.color}"&gt;
            &lt;h:outputText value="\#{car.color}" /&gt;
        &lt;/p:column&gt;
    &lt;/p:dataTable&gt;
&lt;/h:form&gt;
                </pre>
            </p:tab>

            <p:tab title="SortView.java">
                <pre name="code" class="brush:java">
package org.primefaces.showcase.view.data.datatable;

import java.io.Serializable;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.ViewScoped;
import org.primefaces.showcase.domain.Car;
import org.primefaces.showcase.service.CarService;

@ManagedBean(name="dtSortView")
@ViewScoped
public class SortView implements Serializable {
    
    private List&lt;Car&gt; cars1;
    private List&lt;Car&gt; cars2;
    
    @ManagedProperty("\#{carService}")
    private CarService service;

    @PostConstruct
    public void init() {
        cars1 = service.createCars(10);
        cars2 = service.createCars(50);
    }

    public List&lt;Car&gt; getCars1() {
        return cars1;
    }

    public List&lt;Car&gt; getCars2() {
        return cars2;
    }

    public void setService(CarService service) {
        this.service = service;
    }
}
                </pre>
            </p:tab>
            
            <p:tab title="CarService.java">
                <pre name="code" class="brush:java">
package org.primefaces.showcase.service;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import javax.faces.bean.ApplicationScoped;
import javax.faces.bean.ManagedBean;
import org.primefaces.showcase.domain.Car;

@ManagedBean(name = "carService")
@ApplicationScoped
public class CarService {
    
    private final static String[] colors;
	
	private final static String[] brands;
    
    static {
		colors = new String[10];
		colors[0] = "Black";
		colors[1] = "White";
		colors[2] = "Green";
		colors[3] = "Red";
		colors[4] = "Blue";
		colors[5] = "Orange";
		colors[6] = "Silver";
		colors[7] = "Yellow";
		colors[8] = "Brown";
		colors[9] = "Maroon";
		
		brands = new String[10];
		brands[0] = "BMW";
		brands[1] = "Mercedes";
		brands[2] = "Volvo";
		brands[3] = "Audi";
		brands[4] = "Renault";
		brands[5] = "Fiat";
		brands[6] = "Volkswagen";
		brands[7] = "Honda";
		brands[8] = "Jaguar";
		brands[9] = "Ford";
	}
    
    public List&lt;Car&gt; createCars(int size) {
        List&lt;Car&gt; list = new ArrayList&lt;Car&gt;();
		for(int i = 0 ; i &lt; size ; i++) {
			list.add(new Car(getRandomId(), getRandomBrand(), getRandomYear(), getRandomColor(), getRandomPrice(), getRandomSoldState()));
        }
        
        return list;
    }
    
    private String getRandomId() {
		return UUID.randomUUID().toString().substring(0, 8);
	}
    
    private int getRandomYear() {
		return (int) (Math.random() * 50 + 1960);
	}
	
	private String getRandomColor() {
		return colors[(int) (Math.random() * 10)];
	}
	
	private String getRandomBrand() {
		return brands[(int) (Math.random() * 10)];
	}
    
    public int getRandomPrice() {
		return (int) (Math.random() * 100000);
	}
    
    public boolean getRandomSoldState() {
		return (Math.random() &gt; 0.5) ? true: false;
	}

    public List&lt;String&gt; getColors() {
        return Arrays.asList(colors);
    }
    
    public List&lt;String&gt; getBrands() {
        return Arrays.asList(brands);
    }
}
                </pre>
            </p:tab>
            
            <p:tab title="Documentation" titleStyleClass="tab-doc docslide-150" />
        </p:tabView>

    </ui:define>

</ui:composition>